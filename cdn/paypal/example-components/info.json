{
    "_id": "@paypal/example-components",
    "_rev": "34-6bd29882b803839b45ff35c26c983dce",
    "name": "@paypal/example-components",
    "dist-tags": {
        "latest": "1.0.27"
    },
    "versions": {
        "1.0.27": {
            "name": "@paypal/example-components",
            "version": "1.0.27",
            "description": "Example component module for a component for unified PayPal/Braintree web sdk",
            "main": "index.js",
            "scripts": {
                "release": "npm run release:patch",
                "release:patch": "./node_modules/grumbler-scripts/publish.sh patch",
                "release:minor": "./node_modules/grumbler-scripts/publish.sh minor",
                "release:major": "./node_modules/grumbler-scripts/publish.sh major",
                "flow-typed": "flow-typed install",
                "flow": "flow",
                "flow:build": "flow gen-flow-files ./src/index.js --out-dir ./dist/module",
                "lint": "eslint src/ test/ *.js",
                "test": "npm run lint && npm run flow-typed && npm run flow && npm run karma",
                "karma": "cross-env NODE_ENV=test babel-node $(npm bin)/karma start"
            },
            "repository": {
                "type": "git",
                "url": "git+https://github.com/paypal/paypal-braintree-example-component.git"
            },
            "author": {
                "name": "dbrain"
            },
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/paypal/paypal-braintree-example-component/issues"
            },
            "homepage": "https://github.com/paypal/paypal-braintree-example-component#readme",
            "devDependencies": {
                "flow-bin": "^0.70.0",
                "grumbler-scripts": "^3",
                "mocha": "^4"
            },
            "dependencies": {
                "@paypal/sdk-client": "^4.0.1"
            },
            "gitHead": "321c50924ea4c7d71015f555a5949a8792899a30",
            "_id": "@paypal/example-components@1.0.27",
            "_npmVersion": "5.6.0",
            "_nodeVersion": "8.12.0",
            "_npmUser": {
                "name": "bluepnume",
                "email": "daniel@bluesuncorp.co.uk"
            },
            "dist": {
                "integrity": "sha512-/+jAtBNuIo9ZPTXl98B+lsjeay26lZI3kEzBg/BARELOrVKLWynSAZY51glfLET4gDKjlTU1OggOdJLcE+PbHA==",
                "shasum": "546d63f1421463defa0c26d5e1c150618fd005ba",
                "tarball": "https://www.paypalobjects.com/js-sdk-release/paypal/example-components/tarballs/1.0.27.tgz",
                "fileCount": 8,
                "unpackedSize": 6741,
                "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcEFjsCRA9TVsSAnZWagAA1eIP/3FpfbdJBx+FjgKmjThN\nMGyDhKIO9XoW2d/uB87anB5ZzQh/bv7l/ZolIJm4rbDnDGv0yD4US+5ICuO2\nhyq6K5ol2mp0gO0b6PBP8npK28dmxfBwlDv2S9C4xd7mO66eVcEDrfGBhx8Y\nrqs854wxUOuHTUAtsNO1Us8rfXkQnD1XzskWA/NJ3A5YMAUzrh6L5yfjGUip\nE1vuq5KY3jxNQrpjVdv/euOW1N41q7ss2zEL2eIFeOCMnsjfwRKY6XTQjrsd\nnkqV5CWp1XEBATzXL64QA07tWSAXTThZ/O783pj1OtP8QIO+8XQCNzTqj+D3\n+ZZPnVG0TcTZmSUeYl/wrDwTI9nHtYHOkleNs2L2gnqJdkSPMUgSx/NKjY/8\nOPneq1KFzjKnKbTQS+IprT436J4qVnEisIJbwpK/5+JjJilQhMn4oaPTZoJj\n5dYlWf1btTauS42MGgtMNjfH41nfDIIK1jbtYRxo3i6UQAYoQ10QDocbZh2v\ng4N1kURTFelCREb7h9mJXtSv12tePZv/KX6dNcBJtg45CsI+4l8yEj6gXz5f\nZyNnxZZlAYVuxjIUqcocqls29bL0UouMkbx9Vh4DuEjnu4YrcHjsvsNtWrTk\nQBN0MbnT+CgCAoin+IJmN7bKI6zrSKZt60oaLOVMi6WIrOt2wHwTFX7oi6WE\nY6+/\r\n=J9ui\r\n-----END PGP SIGNATURE-----\r\n"
            },
            "maintainers": [
                {
                    "name": "braintree",
                    "email": "devs@getbraintree.com"
                },
                {
                    "name": "bladebarringer",
                    "email": "blade@crookedneighbor.com"
                },
                {
                    "name": "bluepnume",
                    "email": "daniel@bluesuncorp.co.uk"
                },
                {
                    "name": "paypal-user",
                    "email": "DL-PP-NODEJS-SDK@paypal.com"
                }
            ],
            "directories": {},
            "_npmOperationalInternal": {
                "host": "s3://npm-registry-packages",
                "tmp": "tmp/example-components_1.0.27_1544575211787_0.595863366358472"
            },
            "_hasShrinkwrap": false
        }
    },
    "time": {
        "created": "2018-12-12T00:40:11.603Z",
        "1.0.27": "2018-12-12T00:40:11.919Z",
        "modified": "2021-02-04T18:11:08.948Z"
    },
    "maintainers": [
        {
            "email": "ryank@remotevisioninc.com",
            "name": "remotevision"
        },
        {
            "email": "shruti.kapoor08@gmail.com",
            "name": "shrutikapoor08"
        },
        {
            "email": "DL-PP-NODEJS-SDK@paypal.com",
            "name": "paypal-user"
        },
        {
            "email": "daniel@bluesuncorp.co.uk",
            "name": "bluepnume"
        },
        {
            "email": "blade@crookedneighbor.com",
            "name": "bladebarringer"
        },
        {
            "email": "team-sdk@getbraintree.com",
            "name": "braintree"
        },
        {
            "email": "prajarameee@gmail.com",
            "name": "rajarampadmanathan"
        },
        {
            "email": "joshua.a.beam@gmail.com",
            "name": "joshbeam"
        },
        {
            "email": "bryanjenningz@gmail.com",
            "name": "bryanjenningz"
        },
        {
            "email": "zach@zacharyhill.xyz",
            "name": "zhillb"
        },
        {
            "email": "weihou@paypal.com",
            "name": "weihou"
        },
        {
            "email": "nschott@paypal.com",
            "name": "seavenly"
        },
        {
            "email": "tifzhou@paypal.com",
            "name": "tifzhou"
        },
        {
            "email": "rygilbert@paypal.com",
            "name": "rygilbert_paypal"
        },
        {
            "email": "rpalanikumar@paypal.com",
            "name": "rpalanikumar"
        },
        {
            "email": "song@zheng.club",
            "name": "songz"
        },
        {
            "email": "merlinpatt@gmail.com",
            "name": "merlinpatt"
        },
        {
            "email": "mpscqw@gmail.com",
            "name": "jfurman"
        },
        {
            "email": "ravi_shekhar00@yahoo.com",
            "name": "ravishekhar00"
        },
        {
            "email": "vishakha94@outlook.com",
            "name": "visheei94"
        },
        {
            "email": "grjopa@gmail.com",
            "name": "gregjopa"
        },
        {
            "email": "stuartmark@gmail.com",
            "name": "mstuart"
        },
        {
            "email": "antre@paypal.com",
            "name": "antre"
        },
        {
            "email": "mnicpt@gmail.com",
            "name": "mnicpt"
        },
        {
            "email": "lizzyadeline@gmail.com",
            "name": "elizabethmv"
        },
        {
            "email": "nbierdeman@paypal.com",
            "name": "nbierdeman"
        },
        {
            "email": "brice.shatzer@gmail.com",
            "name": "briceshatzer"
        },
        {
            "email": "shrkapoor@paypal.com",
            "name": "shrkapoor"
        },
        {
            "email": "amyegan@paypal.com",
            "name": "amyegan"
        },
        {
            "email": "chetan.jk@gmail.com",
            "name": "chetanjk"
        }
    ],
    "description": "Example component module for a component for unified PayPal/Braintree web sdk",
    "homepage": "https://github.com/paypal/paypal-braintree-example-component#readme",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/paypal/paypal-braintree-example-component.git"
    },
    "author": {
        "name": "dbrain"
    },
    "bugs": {
        "url": "https://github.com/paypal/paypal-braintree-example-component/issues"
    },
    "license": "MIT",
    "readme": "PayPal/Braintree Example Component\n----------------------------------\n\nExample standalone component to be included in unified PayPal/Braintree client SDK\n\n### Quick start\n\nSee [src/index.js](./src/index.js)\n\n#### Tests\n\n- Run the tests:\n\n  ```bash\n  npm test\n  ```\n\n#### Testing with different/multiple browsers\n\n```bash\nnpm run karma -- --browser=Chrome\nnpm run karma -- --browser=Safari\nnpm run karma -- --browser=Firefox\nnpm run karma -- --browser=Chrome,Safari,Firefox\n```\n\n#### Keeping the browser open after tests\n\n```bash\nnpm run karma -- --browser=Chrome --keep-open\n```\n\n#### Releasing and Publishing\n\n- Publish your code with a patch version: \n\n```bash\nnpm run release\n```\n\n- Or `npm run release:patch`, `npm run release:minor`, `npm run release:major`\n\n### Module structure\n\n- `/src` - any code which should be transpiled, published, and end up in production\n- `/test` - karma tests for everything in `/src`\n- `__sdk__.js` - metadata for compiling and bundling the final component\n\n#### `/src/component.js`\n\nThis module exports the public interface for the component.\n\n```javascript\nexport let LebowskiPay = {\n    render(options) {\n        ...\n    }\n};\n```\n\nThen the integrating site can run:\n\n```javascript\npaypal.LebowskiPay.render({ ... });\n```\n\n#### `/__sdk__.js`\n\n`__sdk__.js` defines any metadata which helps the sdk server compile and serve up the component.\n\n```javascript\nexport default {\n\n    /**\n     * Define the lebowski-pay component\n     * Now developers can include paypal.com/sdk/js?components=lebowski-pay\n     */\n\n    'lebowski-pay': {\n\n        /**\n         * Entry point. Everything exported from this module will be exported\n         * in the `window.paypal` namespace.\n         */\n\n        entry: './src/index',\n\n        /**\n         * Define a static namespace.\n         * Server config will be available under the `__lebowski_pay__.serverConfig` global\n         */\n\n        staticNamespace: '__lebowski_pay__',\n\n        /**\n         * Define configuration required by this module\n         * \n         * - This should be in the form of a graphql query.\n         * - The query will be merged with queries defined by other modules\n         * - The final config will be passed as `__lebowski_pay__.serverConfig` in `./src/index` \n         */\n\n        configQuery: `\n            fundingEligibility {\n                card {\n                    branded\n                }\n            }\n        `\n    }\n};\n```\n\n\n### FAQ\n\n- **Why is there no webpack config, dist folder, or npm build command?**\n  \n  This module (and modules like it) are not intended to be built as standalone components. It will be pulled in and compiled/bundled on the server-side, then combined with other modules.\n\n- **When should I publish?**\n  \n  When you publish, you're signing off on your changes being code-complete, fully tested, and ready for release. Publishing **will not immediately trigger a deploy**, but please only publish changes which are in a deployable state.\n\n- **Can I define multiple components in one repo?**\n\n  Absolutely. `__sdk__.js` allows defining multiple entry points. These should generally represent different logical ui components, with separate concerns, and loose coupling. For example:\n\n  ```javascript\n  modules: {\n    'lebowski-pay': {\n        entry: './src/components/lebowski-pay'\n    },\n    'walter-pay': {\n        entry: './src/components/walter-pay'\n    },\n    'donnie-pay': {\n        entry: './src/components/donnie-pay'\n    }\n  },\n  ```\n\n  Please bear in mind that this opens the door to any combination or permutation of these modules to be requested by the merchant -- hence the need for loose coupling. `donnie-pay` should never have a hard dependency on `lebowski-pay` being present.\n\n- **Where is all of the karma, webpack, eslint, etc. config coming from?**\n\n  This module uses `grumbler-scripts` as a common source of configuration and defaults. Any of these can be overriden, either partially, or entirely, depending on the individual needs of the module. You'll notice `.eslintrc.js`, `karma.conf.js`, etc. are lightweight wrappers which only define module-specific overrides.\n",
    "readmeFilename": "README.md"
}