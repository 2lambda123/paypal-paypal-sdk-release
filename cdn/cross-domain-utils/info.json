{
    "_id": "cross-domain-utils",
    "_rev": "61-d8dc0f4b756b97a4f2d744244cc6fb10",
    "name": "cross-domain-utils",
    "description": "Javascript module template.",
    "dist-tags": {
        "latest": "2.0.34"
    },
    "versions": {
        "2.0.34": {
            "name": "cross-domain-utils",
            "version": "2.0.34",
            "description": "Javascript module template.",
            "main": "dist/cross-domain-utils.js",
            "module": "dist/module/index.js",
            "scripts": {
                "build": "npm run test && npm run babel && npm run webpack",
                "webpack": "cross-env NODE_ENV=production babel-node --plugins=transform-es2015-modules-commonjs ./node_modules/.bin/webpack --progress --output-path dist",
                "babel": "cross-env NODE_ENV=production babel src/ --out-dir dist/module",
                "karma": "cross-env NODE_ENV=test babel-node --plugins=transform-es2015-modules-commonjs ./node_modules/.bin/karma start",
                "test": "npm run lint && npm run flow-typed && npm run flow && npm run karma",
                "lint": "eslint src/ test/",
                "flow": "flow",
                "flow-typed": "rm -rf ./flow-typed && flow-typed install",
                "clean": "rimraf dist coverage",
                "reinstall": "rimraf flow-typed && rimraf node_modules && npm install && flow-typed install",
                "release": "./publish.sh",
                "release:patch": "./publish.sh patch",
                "release:minor": "./publish.sh minor",
                "release:major": "./publish.sh major",
                "debug": "cross-env NODE_ENV=debug"
            },
            "repository": {
                "type": "git",
                "url": "git://github.com/krakenjs/cross-domain-utils.git"
            },
            "keywords": [
                "template"
            ],
            "licenses": [
                {
                    "type": "Apache 2.0",
                    "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                }
            ],
            "devDependencies": {
                "chai": "^4.2.0",
                "flow-bin": "^0.135.0",
                "grumbler-scripts": "^3",
                "mocha": "^4"
            },
            "dependencies": {
                "zalgo-promise": "^1.0.11"
            },
            "gitHead": "87164b88ae8d2b59cf97608af9ce68efe66c2c16",
            "bugs": {
                "url": "https://github.com/krakenjs/cross-domain-utils/issues"
            },
            "homepage": "https://github.com/krakenjs/cross-domain-utils#readme",
            "_id": "cross-domain-utils@2.0.34",
            "_npmVersion": "6.4.1",
            "_nodeVersion": "10.13.0",
            "_npmUser": {
                "name": "bluepnume",
                "email": "daniel@bluesuncorp.co.uk"
            },
            "dist": {
                "integrity": "sha512-ke4PirGRXwEElEmE/7k5aCvCW+EqbgseT7AOObzFfaVnOLuEVN9SjVWoOfS/qAT0rDPn3ggmNDW6mguMBy4HgA==",
                "shasum": "3f8dc8d82a5434213787433f17b76f51c316e382",
                "tarball": "https://www.paypalobjects.com/js-sdk-release/cross-domain-utils/tarballs/2.0.34.tgz",
                "fileCount": 21,
                "unpackedSize": 195041,
                "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfd6wsCRA9TVsSAnZWagAAfb8P/2G4Dvv+tAun+Xftaotb\nfJoqWmUiv/XO0f+fQ0mFsKWR1G2BhQZplmgz1NWuXIX6ebAkdkt9BDQ9/cYQ\n9KElC1XwRCurpagIaazg5ieVfNq2twxwsD9tic9dF+x3GjW2gXUxawv5qE9R\ncwsD/UINYUIgnPOKsqjQrFAUNxBnllRxgz2yDcx7AGj/tArpQWdZhIJHQlUU\noV4o3h8S9diwGKWSL948TdK3duM7uL4B7XG+d7h6fDworarseS/kQi4G32Rl\nU0twoVmUu+inrROsOuV0sdiwjQLL5ggNElZdVwKfMgdN4EsaSQYxYgx/Chyr\nq1fzHLjNXRevEOc1kqRjmxI/ltjpAM6La8PTlJrbfa4LzAeWRQb3dj7pqt85\nzUqLvefyUlj+DamBLkCiFSnVrKTJwPTpJd1V3GXypDsAoZVmirHlmX28tpK+\nVK2/1cCUDfE48tL3lBOqeAyPZDmDJ2w5fL7uA3KZ/XwzbrW7+Sqc6YId37RP\n3X9VhW461rDm5roeFafF+58yijYJ8udJB5IK3Ta0KPOvnteRBosJlFdakV8G\njf8Pm2Wb3w3dDlCzMkvm17Eot16u498uk3C/qndIpWMEXOULifMGV2eipZch\nsAYGj3OD3DTABhpG0ez5WBxc92+JfCVpg/S7QlQlUK8H6s2h36L+RijEKdhO\nUOaC\r\n=YX1K\r\n-----END PGP SIGNATURE-----\r\n"
            },
            "maintainers": [
                {
                    "name": "bluepnume",
                    "email": "daniel@bluesuncorp.co.uk"
                }
            ],
            "directories": {},
            "_npmOperationalInternal": {
                "host": "s3://npm-registry-packages",
                "tmp": "tmp/cross-domain-utils_2.0.34_1601678380450_0.5585807679397297"
            },
            "_hasShrinkwrap": false
        }
    },
    "readme": "Cross Domain Utils\n------------------\n\nA set of utilities for dealing with cross-domain windows\n\n## Public methods\n\n### `getDomain(win : Window) => string`\n\nGet the full domain of the specified window, as a string.\n\n- `win` must be a window on the same domain as the current window, or an exception will be raised\n- This can be overridden / mocked by setting `win.mockDomain = 'mock://some-domain.com';`. `mock://` is required to ensure the window can not spoof actual `http://` or `https://` domains\n\n### `getDomainFromUrl(url : string) => string`\n\nGet the full domain from the specified url, as a string. \n\n- it will try to extract the domain from the url string if it starts with well known protocols (`http://`, `https://`, `file://`, and additionally `mock://` urls)\n- if url string does not contain a known protocol, it will try to extract the domain calling `getDomain` using the current window as input\n\n### `getActualDomain(win : Window) => string`\n\nSame as `getDomain` but overriding / mocking is disabled. it will return the real full domain of the specified window.\n\n### `isBlankDomain(win : Window) => boolean`\n\nReturns if the domain for the specified window is blank, or `about:blank`\n\n- `win` must be a window on the same domain as the current window, or an exception will be raised\n- `win` may be a window or iframe that has been newly opened by the current window\n\n### `isSameDomain(win : Window) => boolean`\n\nReturns if the specified window is on the same domain as the current window.\n\n- Does so without raising any errors or console warnings, even in Safari where wrapping the check `try/catch` still raises a console warning.\n\n### `getParent(win : Window) => ?Window`\n\nGets the parent of the specified window, if the window has a parent.\n\n- Only returns the parent of iframes\n- Returns void if the window is the top-level window\n\n### `getOpener(win : Window) => ?Window`\n\nGets the opener of the specified window, if the window has an opener.\n\n- Only returns the opener of windows opened with `window.open`\n- Returns void if the window is the top-level window\n\n### `getParents(win : Window) => Array<Window>`\n\nGets all of the hierarchical parents of the specified window.\n\n- Only returns the parents of iframes\n- Returns a blank array if the window is the top-level window\n\n### `isAncestorParent(ancestor : Window, win : Window) => boolean`\n\nReturns true if the `ancestor` is a direct or non-direct parent of the specified window.\n\n### `getFrames(win : Window) => Array<Window>`\n\nReturns an array of all direct child frames found in a given window.\n\n- Only returns direct children\n\n### `getAllChildFrames(win : Window) => Array<Window>`\n\nReturns an array of all recursive child frames found in a given window, and in the child-frames of that window.\n\n- Recursively searches for all direct and indirect children\n\n### `getTop(win : Window) => Window`\n\nGets the top-level parent of the specified window.\n\n### `getAllFramesInWindow(win : Window) => Array<Window>`\n\nReturns an array of all recursive child frames found in a given window, and in the child-frames of that window, including the specified window.\n\n- Recursively searches for all direct and indirect children\n\n### `isTop(win : Window) => boolean`\n\nReturns true if the specified window is the top level window, without any parents.\n\n### `isFrameWindowClosed(frame : HTMLIFrameElement) => boolean`\n\nReturns true if the window attached to an iframe element is closed, by checking if the frame is still attached to an open document.\n\n- Prefer `isWindowClosed` when possible\n\n### `isWindowClosed(win : Window) => boolean`\n\nReturns true if a window has been closed\n\n- In IE/Edge, this check is not 100% reliable for frame windows where the frame has been removed from the DOM. Such window objects give no indication that they are closed.\n\n### `getUserAgent(win : Window) => string`\n\nGets the user agent for the specified window\n\n- Window must be on the same domain as the current window\n- Uses `win.navigator.mockUserAgent` if specified, to allow for mocking / tests.\n\n### `getFrameByName(win : Window, name : string) => ?Window`\n\nGets a frame window with the given name, if it exists as a child of the specified window.\n\n### `findChildFrameByName(win : Window, name : string) => ?Window`\n\nRecursively searches for a given frame window inside the children specified window.\n\n### `findFrameByName(win : Window, name : string) => ?Window`\n\nRecursively searches for a given frame window inside the entire frame hierarchy of the specified window.\n\n- Searches both the children and the parent windows recursively for the frame.\n\n### `isParent(parent : Window, child : Window) => boolean`\n\nReturns true if the specified parent window is the parent of the specified child window.\n\n### `isOpener(opener : Window, child : Window) => boolean`\n\nReturns true if the specified opener window is the opener of the specified child window.\n\n### `getAncestor(win : Window) => ?Window`\n\nGets either the parent or the opener of the specified window, if either is present.\n\n### `getAncestors(win : Window) => Array<Window>`\n\nRecursively gets either the parent or the opener of the specified window, if either is present, and returns an array of the entire ancestor hierarchy.\n\n### `isAncestor(ancestor : Window, child : Window) => boolean`\n\nReturns true if the specified ancestor window is the parent or the opener of the specified child window.\n\n### `isPopup(win : Window) => boolean`\n\nReturns true if the specified window has been opened with `window.open` (i.e. if it is a popup window)\n\n### `isIframe(win : Window) => boolean`\n\nReturns true if the specified window has been opened as an iframe.\n\n### `getDistanceFromTop(win : Window) => number`\n\nGets the numerical distance from the specified window to the top level window in that window's hierarchy.\n\n- If the specified window is at the top, this will return 0.\n\n### `getNthParent(win : Window, n : number) => ?Window`\n\nGets the window `n` levels up from the specified window, if it exists.\n\n### `isSameTopWindow(win1 : window, win2 : Window) => boolean`\n\nReturns true if the windows are in the same hierarchy, with the same top level window\n\n- Will return false if one of the windows is a popup and the other window is not a frame inside that popup.\n\n### `isWindow(obj : Window) => boolean`\n\nReturns true if the specified object is a window instance\n\n### `onCloseWindow(win : Window, callback : Function, interval : number) => { cancel : Function }`\n\nCalls the callback when the specified window closes, with checks running on the specified interval.\n\n- Returns a listener object with a `.cancel()` method, to stop the loop\n\n### `matchDomain(pattern : (string | RegExp | Array<string>), domain : string) => boolean`\n\nReturns true if the specified domain matches the pattern. The pattern can be one of:\n\n- A literal string\n- A regular expression\n- An array of possible domains as strings\n\n# Tasks\n\nAll of the tasks are listed in the package.json file under the scripts section\n\n| Command        | Description  |          \n| ------------- |:-------------:|\n| npm run build | Builds the dist files |\n| npm test      | Runs the test suite.  Lint + Type + Karma  |\n\n# Debugging\n\nRun the debug task and pass the next tasks as argument.\n\n```\nnpm run debug -- npm run build\nnpm run debug -- npm test\nnpm run debug -- npm run karma -- --browsers=Chrome\n```\n",
    "maintainers": [
        {
            "name": "bluepnume",
            "email": "daniel@bluesuncorp.co.uk"
        }
    ],
    "time": {
        "modified": "2020-10-02T22:39:42.975Z",
        "created": "2017-06-06T03:08:02.258Z",
        "1.0.1": "2017-06-06T03:08:02.258Z",
        "1.0.2": "2017-06-06T03:16:07.882Z",
        "1.0.3": "2017-06-06T22:00:32.484Z",
        "1.0.4": "2017-06-06T22:31:02.232Z",
        "1.0.5": "2017-06-10T00:41:18.984Z",
        "1.0.6": "2017-06-13T01:00:05.124Z",
        "1.0.7": "2017-06-14T17:54:39.672Z",
        "1.0.8": "2017-06-21T00:37:41.715Z",
        "1.0.9": "2017-06-22T20:33:11.021Z",
        "1.0.10": "2017-07-10T21:42:56.328Z",
        "1.0.11": "2017-07-10T22:12:05.748Z",
        "1.0.12": "2017-07-10T22:42:28.479Z",
        "1.0.13": "2017-07-12T13:44:44.117Z",
        "1.0.14": "2017-07-26T13:54:20.465Z",
        "1.0.15": "2017-07-28T00:52:03.539Z",
        "1.0.16": "2017-08-01T05:26:33.186Z",
        "1.0.17": "2017-08-01T07:03:03.180Z",
        "1.0.18": "2017-08-02T07:06:36.544Z",
        "1.0.19": "2017-08-02T23:37:02.104Z",
        "1.0.20": "2017-08-03T21:29:57.615Z",
        "1.0.21": "2017-08-04T00:17:51.104Z",
        "1.0.22": "2017-08-04T02:41:08.122Z",
        "1.0.23": "2017-08-29T03:15:53.657Z",
        "1.0.24": "2017-09-06T18:20:52.351Z",
        "1.0.25": "2017-09-07T04:34:20.243Z",
        "1.0.26": "2017-09-30T22:54:41.880Z",
        "2.0.0": "2017-10-11T23:13:07.109Z",
        "2.0.1": "2017-10-11T23:36:31.028Z",
        "2.0.2": "2017-12-08T21:25:52.650Z",
        "2.0.3": "2017-12-08T22:56:15.056Z",
        "2.0.4": "2018-03-01T19:22:29.859Z",
        "2.0.5": "2018-03-01T19:23:38.072Z",
        "2.0.6": "2018-03-01T19:52:51.101Z",
        "2.0.7": "2018-04-19T20:06:55.712Z",
        "2.0.8": "2018-04-19T21:27:23.145Z",
        "2.0.9": "2018-04-19T21:38:37.179Z",
        "2.0.10": "2018-04-19T21:56:35.586Z",
        "2.0.11": "2018-08-14T02:26:08.978Z",
        "2.0.12": "2018-08-30T00:49:13.886Z",
        "2.0.13": "2018-08-31T05:54:25.403Z",
        "2.0.14": "2018-09-11T00:45:35.319Z",
        "2.0.15": "2018-09-11T23:48:43.754Z",
        "2.0.16": "2018-10-22T17:05:54.174Z",
        "2.0.17": "2018-11-24T04:51:40.900Z",
        "2.0.18": "2018-11-26T00:41:19.412Z",
        "2.0.19": "2018-11-27T18:24:24.879Z",
        "2.0.20": "2018-11-29T04:41:45.167Z",
        "2.0.21": "2018-12-11T19:28:25.980Z",
        "2.0.22": "2018-12-14T18:36:29.569Z",
        "2.0.23": "2018-12-21T17:20:04.393Z",
        "2.0.24": "2019-02-02T00:14:59.483Z",
        "2.0.25": "2019-05-02T18:19:57.853Z",
        "2.0.26": "2019-05-14T22:34:10.620Z",
        "2.0.27": "2019-05-15T17:54:42.426Z",
        "2.0.28": "2019-09-22T23:24:57.676Z",
        "2.0.29": "2019-10-25T02:22:52.776Z",
        "2.0.30": "2020-03-04T01:22:20.467Z",
        "2.0.31": "2020-03-04T19:04:12.151Z",
        "2.0.32": "2020-03-04T19:57:43.276Z",
        "2.0.33": "2020-06-26T04:24:17.809Z",
        "2.0.34": "2020-10-02T22:39:40.584Z"
    },
    "homepage": "https://github.com/krakenjs/cross-domain-utils#readme",
    "keywords": [
        "template"
    ],
    "repository": {
        "type": "git",
        "url": "git://github.com/krakenjs/cross-domain-utils.git"
    },
    "bugs": {
        "url": "https://github.com/krakenjs/cross-domain-utils/issues"
    },
    "readmeFilename": "README.md"
}